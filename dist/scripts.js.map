{"version":3,"sources":["../src/scripts.js"],"names":["ToDoClass","tasks","JSON","parse","localStorage","getItem","addEventListeners","loadtasks","console","log","tasksHtml","reduce","html","task","index","generateTaskHtml","document","getElementById","innerHTML","setItem","stringify","isComplete","event","taskIndex","preventDefault","splice","text","prompt","target","addTask","value","newtask","parentDiv","parentElement","classList","add","setAttribute","remove","push","addEventListener","keyCode","toDo","window"],"mappings":"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","file":"scripts.js","sourcesContent":["class ToDoClass {\n    constructor(){\n        this.tasks = JSON.parse(localStorage.getItem(\"TASKS\"))\n        if(!this.tasks){\n            this.tasks = [\n            ];\n        }\n        this.addEventListeners()\n        this.loadtasks()\n        console.log(\"This is a debugger\")\n    }\n\n    loadtasks()\n    {\n        //ES5 syntax\n        // let tasksHtml = (this.tasks).reduce(function(html, task, index) { \n        //     return html += this.generateTaskHtml(task, index)   // the this here refers to the todo object and we have to explicitly bind it with this.\n        //   }.bind(this), '');   \n\n        //ES6 syntax\n        let tasksHtml = this.tasks.reduce((html,task,index)=>html += this.generateTaskHtml(task,index),'');\n        document.getElementById('taskList').innerHTML = tasksHtml;\n        localStorage.setItem(\"TASKS\",JSON.stringify(this.tasks))\n    }\n\n    generateTaskHtml(task, index) {\n        return `\n         <li class=\"list-group-item checkbox\">\n          <div class=\"row\">\n           <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 checkbox\">\n            <label><input id=\"toggleTaskStatus\" type=\"checkbox\"  \n            onchange = \"toDo.toggleTaskStatus(${index})\";\" value=\"\" class=\"\" \n            ${task.isComplete?'checked':''}></label>\n           </div>\n           <div class=\"col-md-9 col-xs-9 col-lg-9 col-sm-9 task-text ${task.isComplete?'complete':''}\">\n            ${task.task}\n          </div>\n          <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 delete-icon-area\">\n            <a class=\"\" href=\"/\" onClick=\"toDo.deleteTask(event, ${index})\"><span \n            id=\"deleteTask\" data-id=\"${index}\" class=\"delete-icon glyphicon \n            glyphicon-trash\"></span></a>\n           </div>\n           <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 edit-icon-area\">\n           <a class=\"\" href=\"/\" onClick=\"toDo.editTask(event, ${index})\"><span \n           id=\"deleteTask\" data-id=\"${index}\" class=\"edit-icon glyphicon \n           glyphicon-pencil\"></span></a>\n          </div>\n          </div>\n         </li>\n       `;\n    }\n\n    toggleTaskStatus(index) {\n        this.tasks[index].isComplete = !this.tasks[index].isComplete;\n        this.loadtasks();\n    }\n\n    deleteTask(event, taskIndex) {\n        // console.log(event)\n        event.preventDefault();\n        this.tasks.splice(taskIndex,1);\n        this.loadtasks();\n    }\n\n    editTask(event,taskIndex) {\n        event.preventDefault();\n        let text = prompt(\"Change the task name\")\n        this.tasks[taskIndex][\"task\"] = text\n        console.log((this.tasks[taskIndex])[\"task\"])\n        this.loadtasks()\n    }\n\n    addTaskClick() {\n        let target = document.getElementById(\"addTask\")\n        this.addTask(target.value);\n        target.value = \"\";\n    }\n\n    addTask(task) {\n        let newtask = {\n            task,\n            isComplete:false\n        };\n        let target = document.getElementById(\"addTask\")\n        let parentDiv = target.parentElement;\n        if(task===\"\")\n        {\n            parentDiv.classList.add(\"has-error\")\n            target.setAttribute(\"placeholder\",\"Enter some text here\");\n        }\n        else{\n            parentDiv.classList.remove(\"has-error\")\n            this.tasks.push(newtask)\n            this.loadtasks()\n        }\n    }\n\n    addEventListeners(){\n        document.getElementById('addTask').addEventListener('keypress', event => {\n            if(event.keyCode === 13) {\n              this.addTask(event.target.value);\n              event.target.value = '';\n            }\n          });\n    }\n    \n  }\n\nvar toDo;\n\nwindow.addEventListener(\"load\",function(){\n    toDo = new ToDoClass();\n})"]}